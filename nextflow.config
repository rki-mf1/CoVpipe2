manifest {
    mainScript = 'CoVpipe2.nf'
    name = 'CoVpipe2'
    nextflowVersion = '>=20.01.0'
}

params {
    cores = '4'
    max_cores = 12 //Runtime.runtime.availableProcessors()
    memory = '12'

    help = false
    profile = false
    workdir = false

    // input

    // reads
    fastq = ''
    list = false
    dir = false
    mode = 'paired'
    run_id = ''

    // reference
    reference = false // currently only 'sars-cov-2'
    ref_genome = false // e.g. 'data/reference_SARS-CoV2/NC_045512.2.fasta'
    ref_annotation = false // e.g. 'data/reference_SARS-CoV2/NC_045512.2.gff3'

    // adapter & read trimming
    adapter = false // e.g. 'data/adapters/NexteraTransposase.fasta'
    fastp_additional_parameters = '--qualified_quality_phred 20 --length_required 50'
    
    // kraken
    kraken = false
    taxid = '2697049'

    // amplicon primer clipping
    primer_bed = false
    primer_bedpe = false
    primer_version = false

    // variant calling with freebayes
    vcount = 10 
    frac = 0.1
    cov = 20

    // vcf with variants of interest
    vois = false

    // variant hard filtering
    var_mqm = 40
    var_sap = 60 // -1 to disable
    var_qual = 10

    // consensus generation
    cns_min_cov = 20
    cns_gt_adjust = 0.9

    // update settings and default container
    update = false
    pangolin_docker_default = 'rkimf1/pangolin:4.0.2--1ce53f4'
    nextclade_docker_default = 'rkimf1/nextclade:1.11.0--51f387b'

    // output folder structure
    output = 'results'
    reference_dir = '00-Reference'
    read_dir = '01-Read-QC'
    mapping_dir = '02-Mapping'
    variant_calling_dir = '03-Variant-Calling'
    consensus_dir = '04-Consensus'
    linage_dir = '05-Linages_Mutations'
    rki_dir = '06-RKI-summary'
    report_dir = 'Report'
    rki_dir = '06-RKI-summary'
    runinfo_dir = 'X.Pipeline-Runinfo'

    // location for engines' cache
    singularity_cache_dir = 'singularity'
    conda_cache_dir = 'conda'

    // location for autodownload data like databases
    databases = 'nextflow-autodownload-databases'

    // softlink results instead of copying
    publish_dir_mode = 'copy' // use 'symlink' to just link the results

    cloudProcess = false
}

// runinfo
timeline {
  enabled = true
  file = "${params.output}/${params.runinfo_dir}/execution_timeline.html"
}

report {
  enabled = true
  file = "${params.output}/${params.runinfo_dir}/execution_report.html"
}

profiles {
    // executors
    local {
        executor {
            name = "local"
            cpus = params.max_cores
            memory = params.memory
        }
        params.cloudProcess = false
        includeConfig 'configs/local.config'
    }

    slurm {
        executor {
            name = "slurm"
            queueSize = 100
            // exitReadTimeout = "360 sec"
            // submitRateLimit = '1 / 2 s'
            // pollInterval = '30 sec'
        }
        process.cache = "lenient"
        includeConfig 'configs/nodes.config'
    }

    // engines
    conda { 
        conda {
            cacheDir = params.conda_cache_dir
        }
        includeConfig 'configs/conda.config'
    }
    mamba { 
        conda {
            cacheDir = params.conda_cache_dir
            useMamba = true
        }
        includeConfig 'configs/conda.config'
    }

    docker {
        docker { enabled = true }
        includeConfig 'configs/container.config'
    }

    singularity {
        singularity { 
                enabled = true
                autoMounts = true
                cacheDir = params.singularity_cache_dir
                envWhitelist = "HTTPS_PROXY,HTTP_PROXY,http_proxy,https_proxy,FTP_PROXY,ftp_proxy"
        }
        includeConfig 'configs/container.config'
    }

    // pre-merged
    standard { 
        executor {
                name = "local"
               	cpus = params.max_cores
        }
        conda {
            cacheDir = params.conda_cache_dir
        }
        params.cloudProcess = false
        includeConfig 'configs/local.config'
        includeConfig 'configs/conda.config'
    }

    // no config for stub runs
    stub {
        executor {
                name = "local"
               	cpus = params.max_cores
        }
    }

    // only load cluster config (without executer) 
    cluster {
        params.cloudProcess = true
        includeConfig 'configs/nodes.config'
    }
}